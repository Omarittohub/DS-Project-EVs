import pandas as pd
import plotly.express as px

# Charger le fichier CSV avec low_memory=False
file_path = r'C:\Users\omari\Desktop\Work\DATASC\MapVoitureElecparVille\voitures-par-commune-par-energie.csv'
data = pd.read_csv(file_path, delimiter=';', low_memory=False)

# Convertir la colonne 'DATE_ARRETE' en datetime
data['DATE_ARRETE'] = pd.to_datetime(data['DATE_ARRETE'], errors='coerce')

# Filtrer les données pour les années 2020 à 2024
data_filtered = data[data['DATE_ARRETE'].dt.year.isin([2020, 2021, 2022, 2023, 2024])]

# Fondre le dataframe pour avoir un format long
data_melted = data_filtered.melt(id_vars=['DATE_ARRETE'], 
                                 value_vars=['NB_VP_RECHARGEABLES_EL', 'NB_VP_RECHARGEABLES_GAZ', 'NB_VP'],
                                 var_name='Vehicle_Type', value_name='Count')

# Renommer les types de véhicules pour plus de clarté
data_melted['Vehicle_Type'] = data_melted['Vehicle_Type'].replace({
    'NB_VP_RECHARGEABLES_EL': 'Electric',
    'NB_VP_RECHARGEABLES_GAZ': 'Gas',
    'NB_VP': 'Total'
})

# Grouper par année et type de véhicule, puis calculer la somme
data_grouped = data_melted.groupby([data_melted['DATE_ARRETE'].dt.year, 'Vehicle_Type'])['Count'].sum().reset_index()

# Créer le graphique en aires
fig = px.area(data_grouped, x='DATE_ARRETE', y='Count', color='Vehicle_Type', 
              title='Évolution du nombre de véhicules par type (2020-2024)',
              labels={'DATE_ARRETE': 'Année', 'Count': 'Nombre de véhicules'})

# Enregistrer le graphique en tant que fichier HTML
fig.write_html(r'C:\Users\omari\Desktop\Work\DATASC\AppliWeb\vehicle_count_by_type.html')

# Afficher le graphique
fig.show()